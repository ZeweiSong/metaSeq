#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on Thu Nov 15 10:36:47 2018

Coders who love to comment their code are unlikely to have bad luck.

@author: Zewei Song
@email: songzewei@genomics.cn
"""
#%
from __future__ import print_function
from __future__ import division
from metaSeq import io as seqIO
from metaSeq import bead
from metaSeq import kmer
import json
import random
beads = seqIO.beadJsonTrunk('CL100077200_L01.json')
report = {}
kmerFrag = []
k = 21
count = 0
with open('kmer.json', 'a') as f:
    kmerPool = []
    for trunk in beads:
        count += 1
        print(count)
        for record in trunk:
            b = bead.beadSequence(record)
            kmers = kmer.kmerCount(b, k)
            kmerNumber = len(kmers.kmers)
            if kmerNumber > 1000:
                kmers_sample = random.sample(kmers.kmers, 1000)
            else:
                kmer_sample = kmers.kmers
            barcode = b.barcode
            kmerPool.append({barcode:kmers_sample})
            for line in kmerPool:
                f.write('{0}\n'.format(json.dumps(line)))
            
            kmerNumber = len(kmers.kmers)
            fragNumber = len(b.fragments)
            kmerFrag.append((kmerNumber, fragNumber))
            report[kmerNumber] = report.get(kmerNumber, 1) + 1

report = sorted([x for x in report.items()], key=lambda i:i[0])

with open('reportTest.tsv', 'w') as f:
    f.write('KmerNumber\tCount\n')
    for line in report:
        f.write('{0}\t{1}\n'.format(line[0], line[1]))

with open('kmerFrag.tsv', 'w') as f:
    f.write('KmerNumber\tFragNumber\n')
    for line in kmerFrag:
        f.write('{0}\t{1}\n'.format(line[0], line[1]))

#%%
#b = {"610_468_919": [["GGGTTAGGATTACTCTTCTTTCCTTGAGCAGGGTTTAGCCCTTCAGGATTACTCTTTGTTTTTCGGCCAAGCCAGTTTTCAAT"], ["GATCTAATGTTCAGTTAATTGATCCTGCATTTGAGACAATCAGACAGGCAAAGGAATTGTTAACTGGCAAAAATCAGTTGAGTGATAATTTAGCGTCAAGTATCAACCTTTATTCAACGGGAGATGCTAAAGAC"], ["TGTCTGAATACTCTGACCGGACAGCCGTATCTAAGATGATCGGTGCTACTGCTGGTTATGTTGGTTACGAAGACAACGGTAATACCTTGACTGAAAAGGTTCGTCGTCACCCTTATTCAATTATTCTTCTTGATGAAATTGAAAAGGCTAATCC"], ["GTCTTCTCTGTTCAACCTTAATGAACATTGCCCTCCCAACCTTCATGAATGTCTTTCATATTAGCGAGGCCCAGGTTCAATG"], ["CCATTTTGCATTACTAGGAACTTCCCGTCGTCCATTAACTGACGAAGAATTCCAACAAATCGTTCGTGAATCTATTAGTAACATTCCAGAAACTGAGAATGGC"], ["GTCTTTTCATGGTGTTTGGTCGTTGCGTATTGCTTTGCTGACTCATCCGGACGTAATTCGTGAATTAATATATTTCCTGGATGCGGG"], ["GATTAATACTCATTGGATGCGTGAAGGGGTTTCAATGATTGATCCTGAAACAACTTATATTGATGCTGATGTCAAGATTGGTCGTGATACAGT"], ["ATTCAACCTAACTGCTCCTTTTTCATCATAAGTTTTCTAGATAATAATTAGTCATAACTGCTATTATACTAAAGCATTCACTGAACCGCAAAACAGATTTAGGTTATTTTAAATCTTCCTTCTAATAGTGACAAGACTCAGAA"], ["TATAATGGCTTATTGGCGGTGGAGTTTTCGCCAAAATTCGTGGATAAAAACGGAACATGGAAAAATGTTTCTTAAGTAGCGGGGAGATATGA"], ["GAAGATGCTAAGGCTGCCTGGCCCAAGCACATGGTTGTTCACCAGCGTGGCGAAATGCCCAACCACTTCATCTCTAAGGATACCCGTTTAGAGCTTGACTTGCCAGAAGAAAGCGCTCGATACACGGCGACTCCCGAATGGACAGATAAAGATGGTTTA"], ["CATTAGATCCTAATTTATTATGAATTTCTTTTTGTAAAAACGGGAAATGAGTACACCCAAGGATCAAAGCTTCAATCGATTGGTTATCAAATACTTCTAATTCAGTGTCAACAGCTTTTTGTGCCTCACTTGTTCCTGTTTGCCC"], ["ACAATATGACATGGCAATTGCGCGGGCACGGCAGGTTAATAAAGAAAATTATGCTAAGAAGCTACC"], ["CAATCTTAGAAAATAAGCGTCTCAATATGAAAAAATTGAAAGAGAATCTATCGACTAGTCGGTTTTCATTTGCCCGTCCAGAAGAATTAGCTATGAAGTTAGGAATAACAAG"], ["GTTGTACGGCAATGCTTGTTGGAAAGAATGCTACGATTGATGGCTCAACAATTATTGCACGTGATGAGGATGCTGAAGAT"], ["TTACAATGCTCTTCATCTTGGTACTTGAATGGTTACCAAGAGCATCAAGAAGCATCTGGTCGCCTACTTGTTCGTCGGTATCAAAGATGGTTACAATCACGCCATCTTTAATTTGGAATTGGCGCTTAAGAGTAAGAT"], ["GTTATTTACTTGGGAAACTCCTGCAACATAACGATTTACACCATCACTCAAGGTCACCATTCCGGTACCAATTTGTTGGGCACCATCAGCGGCCTTGTTCATCCCCTTACCT"], ["ATAACTTGACTGGGCAAGTGCTGATAAAAACTCATCGGCCTCTGCTCCCATTAGTTTTTTGTATTTCGTGACAAATTCATTTGGTAATTGCACGTTAATTTCTCGCTCCTCTTTATCGTAATATCTTTATTG"], ["GCTTAAAAGCTGTATAAGCTATTATTAAGGAGCTATTTATATGTTTTTTGAAATTATTGGGATGATTATTATCGCTTACCTATTAGGTTCAATCCCAACTGGTCTCTGGATCGGTAAGTATATTTATCATAAGGATATTCGCAAGTTAGGTAGCGG"], ["AGCTTAGCTAATGCACGAGCTTCACACTTCTCAAAATCCTTGAATAGTGAGACACTCATATATTG"], ["TCCATATGGTGAAATTCGTTTTGCTGGCCAACATGTACCAGCAGTTAAGTCATTTGATAAATCAGGCCATGTCTTTTACATGAGTACATTTTCAAAGACGTTAGCCCCAGGAT"], ["CATCGAGTGACATCTTCTTCAAAGCTTCAACAGCAACTTCGGTAGCCTTGTCAATACCACGACGAATAC"], ["GCTATGAGGAGGGGGACTAATGCGGCAAAAAGCGATGTTTATCGACCCATATGCATTGTGCATTATCCTATTTGTGATTGCTCCATTGTTATTCATACTT", "ACTAATCACTAATGTCACAAGGGTAATCAAAAAGGCATACCAAACAGAATTAAGCGTCATCTTAAGATAAACACCTGATGTCAGATATTCAGCATAGTTA"], ["GACTTAGCTAACCTATTAAACGAAGCGGCTTTATTAGCTGCGCGGCGGAACAAAACTGAGATTGATGCTGCTGCCTTAGATGAAGCAGAAGACCGGGTAA", "CATCAGACCAGCGATTTGTTCCATCGCATTCTTTTTCGACATTAACATCTGATCTTCACGTGGAAGCATGATAGCATATCCACCTGCACGCCCACGCGGA"], ["GTATACTTCTGGGTTTAAATCGCGTTTATATTCATCCCATAAAGCATTTAAGCTATCGAAACGGTGTTGACGGCTCTCCTCTAAGCTCGGTTCATCATAA", "GATGAGGATCCTCGTAATGAAAAGTCACTCAATATGTTCAATCCTAACTTCCCACTCCAGCAAAAAGACGTGGAAGATTTTACTGCCCGGCCAACGCTAA"], ["GTTAGTAGCTGCCATGACGATAATTCCTTCATCGCCTTGGAAACCATCCATTTCAACTAACAATTGGTTCAAGGTTTGTTCACGTTCATCGTGACCGCCA", "GGTAAAACCTTGCTAGCTAAGGCAGTTGCCGGTGAATCAGGGGTACCATTCTTCTCAATCTCTGGTTCTGACTTTGTTGAAATGTTCGTCGGTGTTGGGG"], ["GAAACAGAAAGGAGGACGCCATTAATGAAAAAGCAGCGATGGTCATGGGGAAAAGCATACCTGGCATTAGTTTTTGTGATCTTATATGCGCCAATTTTGT", "ATGGTAATCATTCGCGTATCCGCAAGCAAATCCGCATAGTGTTGCCAAGAAAAGCCATGGTATTTTTCCATTGTTTGTCCGCTGCTAAAGGAAAAAACAA"], ["CCGTTATACGAATTACACTTACGGAGTCTTTCAGTATTTGAACGGATCGTCTCGTTATCGACTAGAGTGGTAGCTAGCTAGCTGCAATCAAGGTGGTAAC", "TATGAAGACTATCCCCGGTTGGGTCAGTTCCACAGTAAAGAGCAATTTTATCTTCTGATGTTAATTTGCGTAGACCTTCTTCGTCTGTAACTTGGTTAAT"], ["TTCTTTAACTGTGTCCGGTTTGTGTAACGTCCATTTTCATCTCGATAGGTAACGATATTTTTAGCAATCGTTTTATTAAGCCCGGAAATTCGCGTCAATA", "AAATGAAGCCGGTGCCTCTGTTTACTCTGCAAGTAAGGAAGCACGTGATGAATTTCCTGACTTGCGTGTTGAACAGCGAAGTGCGATTAGTATCGGTCGT"], ["CTCGTCATATCATCCATCGTGATCGCGCGGCCACGTTTAGCATTCCATTCGTGACGGTTAACACCATTTATAATTAGCCGTTGACCATTCAATAGGACAA", "ACTTCACGGTGAAAAGACCGGGAACGTTAATGTGCGGGTTATCGACAATGATGGTAATACGCTCGTCAATGAAACACACCCTGTTGATTCCACGGTAAAA"], ["CTTCGGCAATTGTCGCGGGTCTTATTTTATTTCCCGGGTCATTAATCGGTGCTTTTATCTCGCCATTTGCTGGAACTTTGGCTGATCGTTATGGTTTTGC", "CTGTTGCTCATTTGGAATAAAGCAATTGTGGAGGCCAGAAGACTAGTTCCCAGTGAGCCGGCAAATTGTTGGACCATATTAAAGATTGAGTTTACATCGG"], ["AGATGGTTTATTTGAAGAAGATGGGATTAATGAATACGATGTCGCAATGAGCGCAACCGAAAGTGCTTATTCGAATGCCCTTGTTTTAGGCTATGATCCG", "GTAGTGACCTGCCCCGGTTTCGAAGTACCAAGCCTCGTCATTATCGGCGAAAAGGACCCCGTTTGTTTCGCCAGTTCCGTACTTTGCAATCAAGTTACCA"], ["AGGGAAGAAGGTGCAAAGATGACGACAATTACGGGCCTTGGCTTAGTATTGTTAATTTTGATGGTCCTTGTGGGAGGAAAACAGGGCTGGACAGCTTTTT", "CCCATGAAAATGGTTATTGCCAAAATTGTAATCCCAATAGTCACCGTTACAAATAACGGAGGGACATGAAACGCGACTAAAATAATTGCAAAATATAAAA"], ["ATATAAATGGAATTATAAATTTTATGTGGGGTGGTCATTATCAGTAATCAAAAATCAGTACCTAAAAAGCTATCTTTCATCTCAATTTACTTTTTAGGGA", "GGTTATTGCTGTACATAGCAAAACTGCTACAGCCGATAAGTTCATGTACCGATAAATAACAGATGGCAGTAAAAATGTTCCTGAGCCAATTACTCCATTA"], ["CTTCGGCAATTGTCGCGGGTCTTATTTTATTTCCCGGGTCATTAATCGGTGCTTCTATCTCGCCATTTGCTGGAACTCTGGCTGATCGTCATGGTTTTGC", "CTGTTGCTCATTTGGAATAAAGCAATTGTGGAGGCCAGAAGACTAGTTCCCAGTGAGCCGGCAAATTGTTGGACCATATTAAAGATTGAGTTTACATCGG"], ["ACCTAAGATGGGTCCTGCTGATCCAAATGACTTACAAAAATTAGTCGAACTAATTAAAAATAGTAAAATGCCGGTTATCTTAGTCGGTCAACGGGGCGCG", "GTGGTTATCAATTTGAGCTGGCAAGGTATCAAGGTTTACAATTCGCAGATTCCCCTCCTTATTCCAGTTTCGTGGTTCATATTCAATCGGATCATAACCA"], ["TTTGACTGATGTGTACTAGCCCTGTCTGATTGTCATCTAAATCAACGAATGCACCAAAATTAGTGATTCCTGAAACTTTACCTGAAACCTTTGCTCCAAC", "CTATAATTTGAACTAATGATCACAAAATAGGATGTTTTTAGTAGGGTTAGAATATTTTAAATGTTAAAATTAAAAATGTAATTGGGTGATTTTTCAGCTT"], ["GAGCAATCGGTAAGTGACGCTTATGTTGAGTTCGCCGATACCAGCTTTCAATTTTTTCGGCAGCTGCTGGCGAAACTTCACGACCTTCTAAGTAGTCATC", "CCAGCAAAGCTTTATGATAAAACACCAACCGCAGACTTGGAAGAAGACAAACCAATGCGTCCCGATGAAGAAGCGCTTGGTGTTCGCTATGATGAAATTG"], ["GTATACTTCTGGGTTTAAATCGCGTTTATACTCATCCCATAAAGCATTTAAGCTATCGAAACGGTGTTGACGGCCCTCCTCTAAGGTCGGTTCCTCATCA", "GATGAGGATCCTCGTAATGAAAAGTCACTCAATATGTTCAATCCTAACTTCCCACTCCAGCAAAAAGACGTGGAAGATTTTACTGCCCGGCCAATGCTAA"], ["GTTAGTTGCTGTTTTCGCAAGTTGGATTTCTTGGATTCAAATGCTAGCCGAATTGCCACAACATGCGGCTGCGGAAGATGGATCATTCCCTCGGGCTTTT", "GAGTAAGTATGGTGGGACAGTCATAACTCCAACAATTGTTAAGAGCATTTGGTATGCACTCTCATCAAAGTGAGCAATCAAAATAATAATTTCGATAACA"], ["CACCAGCTGAGATACCAACAAGAATTCCTTCTTGATGACCGACTTCACGTGCCATCGCAATTGCGTCATCACTCTTAACTTCGAGGATTCCGTCATAAAC", "GTCATGCATTGAAAAAAGCTAATCCTAATGTTCAGGTTTATGCTCTTGAACCAGCAGAATCTCCAGTATTAAAAGAAGGAAAAGGTGGCAAGCACAAAAT"], ["AGTCAAGGCCTTGGAGAAAGATGATCGCTTTTCATCAGTAGTTGTTTCGACCGGTCAGCATGCTGAAATGCTTCAACAGGTTTTAGCTGTTTTTCAGATA", "TCATTTGCCGGTTCATCTCTTCTGGATAAGGCGAATATTTATTCCATGTTCGCAAACCAGCTTCGACATGACCAATAGCAACCCGATTATAAATGGCAAC"], ["GANACAGAAAGGAGGACGCCATTAATGAAAAAGCAGCGATGGTCATNGGGAAAAGCATACCTGGCATTAGTTTTTGTGATCTTATATGCGCCAATTTTGT", "ATGGTAATCATTCGCGTATCCGCAAGCAAATCCGCATAGTGTTGCCAAGAAAAGCCATGGTATTTTTCCATTGTTTGTCCGCTGCTAAAGNAAGAAACAA"]]}
#b = bead.beadSequence(b)
#for k in range(21, 91, 2):
#    kmers = kmer.kmerCount(b, k)
#    print(len(kmers.kmers), k)